import streamlit as st
import numpy as np
import librosa
import librosa.display
import matplotlib.pyplot as plt
import tensorflow as tf
from tensorflow.keras.models import load_model
import tempfile
import os
import joblib
import subprocess
import warnings

# =======================
# –ù–ê–°–¢–†–û–ô–ö–ò
# =======================
warnings.filterwarnings("ignore", category=UserWarning)
warnings.filterwarnings("ignore", category=FutureWarning)

MODEL_PATH = "tractor_crnn_v2.h5"
CONFIG_PATH = "tractor_config.pkl"

# –ó–∞–≥—Ä—É–∂–∞–µ–º –º–æ–¥–µ–ª—å –∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
model = load_model(MODEL_PATH)
config = joblib.load(CONFIG_PATH)
SR = config["sr"]
N_MELS = config["n_mels"]
MAX_LEN = config["max_len"]

# =======================
# –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò
# =======================
def convert_to_wav(uploaded_file):
    """–ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç m4a/mp3/wav ‚Üí –≤—Ä–µ–º–µ–Ω–Ω—ã–π wav —á–µ—Ä–µ–∑ ffmpeg"""
    suffix = os.path.splitext(uploaded_file.name)[1].lower()
    with tempfile.NamedTemporaryFile(delete=False, suffix=suffix) as tmp_in:
        tmp_in.write(uploaded_file.read())
        tmp_in_path = tmp_in.name

    tmp_out_path = tempfile.mktemp(suffix=".wav")
    try:
        subprocess.run(
            ["ffmpeg", "-y", "-i", tmp_in_path, "-ac", "1", "-ar", str(SR), tmp_out_path],
            stdout=subprocess.DEVNULL,
            stderr=subprocess.DEVNULL,
            check=True,
        )
        return tmp_out_path
    except Exception as e:
        st.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –∞—É–¥–∏–æ: {e}")
        return None
    finally:
        os.remove(tmp_in_path)


def extract_logmel(file_path):
    """–ò–∑–≤–ª–µ–∫–∞–µ—Ç Log-Mel —Å–ø–µ–∫—Ç—Ä–æ–≥—Ä–∞–º–º—É"""
    y, sr = librosa.load(file_path, sr=SR, mono=True)
    y = y / np.max(np.abs(y))
    mel = librosa.feature.melspectrogram(y=y, sr=sr, n_mels=N_MELS)
    logmel = librosa.power_to_db(mel, ref=np.max)

    # –ü–∞–¥–¥–∏–Ω–≥ / –æ–±—Ä–µ–∑–∫–∞
    if logmel.shape[1] < MAX_LEN:
        pad = MAX_LEN - logmel.shape[1]
        logmel = np.pad(logmel, ((0, 0), (0, pad)), mode="constant")
    else:
        logmel = logmel[:, :MAX_LEN]
    return logmel[..., np.newaxis]


def predict_anomaly(file_path):
    """–í—ã—á–∏—Å–ª—è–µ—Ç –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –∞–Ω–æ–º–∞–ª–∏–∏"""
    logmel = extract_logmel(file_path)
    X = np.expand_dims(logmel, axis=0)
    prob = model.predict(X, verbose=0)[0, 0]
    return prob, logmel

# =======================
# STREAMLIT –ò–ù–¢–ï–†–§–ï–ô–°
# =======================
st.set_page_config(page_title="–ê–Ω–∞–ª–∏–∑ –∑–≤—É–∫–∞ —Ç—Ä–∞–∫—Ç–æ—Ä–∞", page_icon="üöú", layout="centered")

st.title("üöú –ê–Ω–∞–ª–∏–∑ –∑–≤—É–∫–∞ —Ç—Ä–∞–∫—Ç–æ—Ä–∞")
st.markdown("–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ –∞—É–¥–∏–æ–∑–∞–ø–∏—Å–∏ –¥–≤–∏–≥–∞—Ç–µ–ª—è (Log-Mel + CRNN).")

uploaded_file = st.file_uploader("–ó–∞–≥—Ä—É–∑–∏—Ç–µ –∞—É–¥–∏–æ", type=["wav", "m4a", "mp3"])

if uploaded_file:
    temp_wav = convert_to_wav(uploaded_file)
    if temp_wav:
        st.audio(temp_wav, format="audio/wav")

        analyze = st.button("üîç –í—ã–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∞–ª–∏–∑")

        if analyze:
            with st.spinner("–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∑–≤—É–∫..."):
                try:
                    prob, logmel = predict_anomaly(temp_wav)
                    st.success("‚úÖ –ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à—ë–Ω!")

                    # === –í–∏–∑—É–∞–ª—å–Ω—ã–π –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä ===
                    st.subheader("üß† –†–µ–∑—É–ª—å—Ç–∞—Ç –∞–Ω–∞–ª–∏–∑–∞")
                    if prob > 0.5:
                        st.markdown(
                            f"<h2 style='color:red;'>üî¥ –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –∞–Ω–æ–º–∞–ª–∏—è ({prob*100:.1f}%)</h2>",
                            unsafe_allow_html=True
                        )
                    else:
                        st.markdown(
                            f"<h2 style='color:green;'>üü¢ –¢—Ä–∞–∫—Ç–æ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç –∏—Å–ø—Ä–∞–≤–Ω–æ ({(1-prob)*100:.1f}%)</h2>",
                            unsafe_allow_html=True
                        )

                    # === –ì—Ä–∞—Ñ–∏–∫ Log-Mel ===
                    st.subheader("üéß Log-Mel —Å–ø–µ–∫—Ç—Ä–æ–≥—Ä–∞–º–º–∞")
                    fig, ax = plt.subplots(figsize=(8, 3))
                    img = librosa.display.specshow(
                        logmel.squeeze(),
                        sr=SR,
                        hop_length=512,
                        x_axis="time",
                        y_axis="mel",
                        cmap="magma",
                        ax=ax
                    )
                    ax.set(title="Log-Mel —Å–ø–µ–∫—Ç—Ä–æ–≥—Ä–∞–º–º–∞ (–¥–ë)")
                    fig.colorbar(img, ax=ax, format="%+2.0f dB")
                    st.pyplot(fig)

                except Exception as e:
                    st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ: {type(e).__name__}")
                    st.code(str(e))

        os.remove(temp_wav)
